server:
  port: 8085

spring:
  data:
    mongodb:
#      uri: mongodb://btb:btb@mongo:27017/customerDb?authSource=admin
      host: ${DB_HOST:localhost}
      database: ${DB_DATABASE:customerDb}  # The name of the database to connect to
      username: ${DB_USERNAME:btb}  # MongoDB username (optional if included in URI)
      password: ${DB_PASSWORD:btb}  # MongoDB password (optional if included in URI)
      port: ${DB_PORT:27017}
      authentication-database: admin

  kafka:
    bootstrap-servers: kafka:29092
    consumer:
      group-id: orderGroup,paymentGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
#        spring.json.type.mapping: orderConfirmation:com.avro.OrderConfirmation,paymentNotification:com.avro.PaymentNotification
        schema.registry.url: http://schema-registry:8088
        specific:
          avro:
            reader: true

  mail:
    host: mail-dev
    port: 1025
    username: btb # No username required
    password: btb # No password required
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true

  cloud:
    compatibility-verifier:
      enabled: false
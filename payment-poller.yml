server:
  port: 8087

spring:
  cache:
    type: simple  # Use 'simple' for in-memory caching, or 'redis' if using Redis
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/ecommercepayment}
    username: ${DB_USERNAME:myuser}
    password: ${DB_PASSWORD:mypassword}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database: postgresql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        generate_statistics: true

  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: paymentNotification:com.damlotec.ecommerce.kafka.PaymentNotification

#logging:
#  level:
#    org.hibernate.SQL: DEBUG


#feign:
#  client:
#    config:
#      default:
#        connectTimeout: 5000
#        readTimeout: 10000
#        retryer:
#          period: 1000  # Initial interval between retries in ms
#          maxPeriod: 5000 # Maximum interval between retries in ms
#          maxAttempts: 3  # Number of retry attempts

